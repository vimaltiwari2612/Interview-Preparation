/*
Balanced strings are those who have equal quantity of 'L' and 'R' characters.

Given a balanced string s split it in the maximum amount of balanced strings.

Return the maximum amount of splitted balanced strings.

 

Example 1:

Input: s = "RLRRLLRLRL"
Output: 4
Explanation: s can be split into "RL", "RRLL", "RL", "RL", each substring contains same number of 'L' and 'R'.
Example 2:

Input: s = "RLLLLRRRLR"
Output: 3
Explanation: s can be split into "RL", "LLLRRR", "LR", each substring contains same number of 'L' and 'R'.
Example 3:

Input: s = "LLLLRRRR"
Output: 1
Explanation: s can be split into "LLLLRRRR".
Example 4:

Input: s = "RLRRRLLRLL"
Output: 2
Explanation: s can be split into "RL", "RRRLLRLL", since each substring contains an equal number of 'L' and 'R'
 

Constraints:

1 <= s.length <= 1000
s[i] = 'L' or 'R'
*/

class Solution {
    public int balancedStringSplit(String s) {
        int i = 0;
        String k = "";
        char last = 'N';
        for(char a : s.toCharArray()){
    
                if(last == 'N'){
                    last = a;
                }
                else{
                    if(last != a && k==""){
                       
                            i++;
                            last = 'N';
                    }
                        else{
                            
                            if(areEqual(k + String.valueOf(last) +  String.valueOf(a))){
                                i++;
                                last = 'N';
                                k="";
                            }
                            else{
                                k += String.valueOf(last);
                                last = a;
                            }
                        }
                    }
                }
            
            return i;
        }
    
        private Boolean areEqual(String a){
           int R = 0,L=0;
            
            for(char p : a.toCharArray()){
                if(p == 'R') R++;
                if(p == 'L') L++;
            }
            return (R==L);
        }
}